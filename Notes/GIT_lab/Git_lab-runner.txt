Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-09-06T12:23:16+01:00

====== Git lab-runner ======
Créée le Wednesday 06 September 2023

__GitLab Runner__ est le projet open source utilisé pour exécuter des travaux et renvoyer les résultats à GitLab. Il est utilisé en conjonction avec GitLab CI / CD , le service d'intégration continue open source inclus avec GitLab qui coordonne les travaux.
Il permet:

l'exécution simultanée de plusieurs travaux.
l'utilisation de plusieurs jetons avec plusieurs serveurs (même par projet).
la limitation du nombre de travaux simultanés par jeton.





Pour installer GitLab Runner avec l'executor Docker et une image par défaut basée sur CentOS 7, vous pouvez suivre ces étapes :

1. **Prérequis :**

   Assurez-vous que Docker est déjà installé sur la machine où vous souhaitez exécuter GitLab Runner.

2. **Installation de GitLab Runner :**

   Vous pouvez installer GitLab Runner en suivant les instructions fournies sur le site officiel de GitLab : https://docs.gitlab.com/runner/install/

   Pour les systèmes 

   
   # Ajoutez le dépôt GitLab Runner
   curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash

   # Installez GitLab Runner
   sudo dnf install gitlab-runner
   ```

3. **Configuration de GitLab Runner :**

   Une fois GitLab Runner installé, vous devez le configurer pour utiliser l'executor Docker avec l'image par défaut CentOS 7.

   - Enregistrez le runner avec votre GitLab. Assurez-vous d'avoir le token d'enregistrement de votre projet GitLab à portée de main.

	 ```

	 sudo gitlab-runner register
	 ```





nJihg8X4BDmyx-NwxSbR
https://gitlab.synelia.lan



Runner dédié aux tests d'intégration pour les projets. Nécessite une mise à jour mensuelle. Disponible 24/7 sauf maintenance programmée. Contact : Albam (allassane.bamba@smile.ci).


sudo gitlab-runner register --url https://gitlab.synelia.lan --registration-token nJihg8X4BDmyx-NwxSbR

   - Suivez les étapes de configuration interactives. Voici comment vous pouvez les remplir :

	 - URL de GitLab : Entrez l'URL de votre instance GitLab.
	 - Token d'enregistrement : Utilisez le token d'enregistrement de votre projet GitLab.
	 - Description : Donnez une description à votre runner (par exemple, "Docker Runner with CentOS 7").
	 - Tags : Vous pouvez ajouter des tags pour identifier ce runner, si nécessaire.
	 - Executor : Sélectionnez "docker".
	 - Image par défaut : Entrez "centos:7" pour utiliser l'image CentOS 7 par défaut.

   Une fois que vous avez terminé la configuration, le runner sera enregistré et prêt à être utilisé.

4. **Démarrage du runner :**

   Vous pouvez maintenant démarrer le runner avec la commande suivante :

   ```bash
   sudo gitlab-runner start
   ```

   Votre GitLab Runner est maintenant prêt à exécuter des travaux utilisant Docker avec l'image CentOS 7 par défaut. Assurez-vous que la machine où vous avez installé le runner a accès à Internet pour télécharger les images Docker au besoin.























concurrent = 1
check_interval = 0
shutdown_timeout = 0

[session_server]
  session_timeout = 1800

[[runners]]
  name = "first runner"
  url = "https://gitlab.synelia.lan"
  id = 1
  token = "MRWXMfMM9W5vsePkJZtA"
  token_obtained_at = 2023-11-17T15:04:37Z
  token_expires_at = 0001-01-01T00:00:00Z
  executor = "docker"
  [runners.cache]
	MaxUploadedArchiveSize = 0
  [runners.docker]
	tls_verify = false
	image = "centos:7"
	privileged = false
	disable_entrypoint_overwrite = false
	oom_kill_disable = false
	disable_cache = false
	volumes = ["/cache"]
	shm_size = 0
				









docker run -d --name gitlab-runner --restart always     -v /var/run/docker.sock:/var/run/docker.sock     -v /data/gitlab-runner-config:/etc/gitlab-runner --network host    gitlab/gitlab-runner:latest




openssl genrsa -out ca.key 2048
openssl req -new -x509 -days 365 -key ca.key -subj "/C=CN/ST=GD/L=SZ/O=Acme, Inc./CN=Acme Root CA" -out ca.crt

openssl req -newkey rsa:2048 -nodes -keyout server.key -subj "/C=CN/ST=GD/L=SZ/O=Acme, Inc./CN=*.[[https://gitlab.synelia.lan"|synelia.lan]]" -out server.csr
openssl x509 -req -extfile <(printf "subjectAltName=DNS:[[https://gitlab.synelia.lan"|synelia.lan]],DNS:[[www.gitlab.]][[https://gitlab.synelia.lan"|synelia.lan]][["]]) -days 365 -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt
